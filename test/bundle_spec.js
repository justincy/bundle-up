// Generated by CoffeeScript 1.4.0
(function() {
  var BundleUp, Css, Js, expect, express, fs, helper;

  expect = require('expect.js');

  BundleUp = require('./../index');

  Js = require('./../lib/js');

  Css = require('./../lib/css');

  helper = require('./helper');

  fs = require('fs');

  express = require('express');

  describe('bundle:true', function() {
    beforeEach(function() {
      helper.beforeEach();
      this.app = express.createServer();
      return this.bundle = BundleUp(this.app, __dirname + "/files/assets.coffee", {
        staticRoot: __dirname + "/files/public/",
        staticUrlRoot: "/",
        bundle: true
      });
    });
    describe('individual files', function() {
      it('should create coffee/1.js', function(done) {
        return fs.stat(__dirname + "/files/public/min/coffee/1.js", function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
      it('should create coffee/2.js', function(done) {
        return fs.stat(__dirname + "/files/public/min/coffee/2.js", function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
      it('should create js/1.js', function(done) {
        return fs.stat(__dirname + "/files/public/min/js/1.js", function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
      it('should create stylus/main.css', function(done) {
        return fs.stat(__dirname + "/files/public/min/stylus/main.css", function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
      return it('should create public/print.css', function(done) {
        return fs.stat(__dirname + "/files/public/min/print.css", function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
    });
    return describe('bundled files', function() {
      it('should create a css bundle', function(done) {
        expect(this.bundle.css.files.length).to.equal(1);
        return fs.stat(this.bundle.css.files[0].file, function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
      return it('should create a js bundle', function(done) {
        expect(this.bundle.js.files.length).to.equal(1);
        return fs.stat(this.bundle.js.files[0].file, function(err, stats) {
          expect(err).to.equal(null);
          return done();
        });
      });
    });
  });

}).call(this);
